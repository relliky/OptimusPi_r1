/*
 * MPU9150Test.cpp
 *
 *  Created on: 12 Feb 2015
 *      Author: Rellik
 */

#include <src/MPU9150/test/MPU9150Test.h>


MPU9150TestClass::MPU9150TestClass()
			:MPU_UUT(0)
{
	// TODO Auto-generated constructor stub


	if (MPU_UUT.reset() < 0)
		std::cerr << "Failed to reset MPU" << std::endl;

	if (MPU_UUT.testConnection())
		std::cout << "MPU9150 connection verified" << std::endl;
	else
		{std::cerr << "MPU9150 connection failed" << std::endl;  while(1);}

	if (MPU_UUT.setSleepStatus(false) < 0)
		std::cerr << "Failed to set MPU sleep status" << std::endl;

	if (MPU_UUT.setAccelRange(MPU9150_ACCEL_FS_2) < 0)
		std::cerr << "Failed to set MPU accel range" << std::endl;

	if (MPU_UUT.setGyroRange(MPU9150_GYRO_FS_500) < 0)
		std::cerr << "Failed to set MPU gyro range" << std::endl;

	if (MPU_UUT.setDLPFCornerFrequency(MPU9150_DLPF_BW_98) < 0)
		std::cerr << "Failed to set MPU DLPF corner frequency" << std::endl;

	if (MPU_UUT.setSampleRateDivider(0) < 0)
		std::cerr << "Failed to set MPU sample rate divider" << std::endl;

	if (MPU_UUT.setClockSource(MPU9150_CLOCK_PLL_ZGYRO) < 0)
		std::cerr << "Failed to set MPU clock source" << std::endl;

	if (MPU_UUT.setI2CPassthrough(true))
		std::cerr << "Failed to enable I2C passthrough" << std::endl;

	accCalibData.xb = 0.0045f;
	accCalibData.yb = -0.0041;
	accCalibData.zb = -0.0479;
	accCalibData.coef00 = 0.9904f;
	accCalibData.coef01 = 0.0005f;
	accCalibData.coef02 = -0.0015f;
	accCalibData.coef11 = 0.9964f;
	accCalibData.coef12 = 0.0016f;
	accCalibData.coef22 = 0.9997;

}

MPU9150TestClass::~MPU9150TestClass()
{
	// TODO Auto-generated destructor stub
}

void MPU9150TestClass::printRawData(void)
{

}

