/* 
 * File:   ExtendedKalman.h
 * Author: matt
 *
 * Created on 14 March 2013, 17:26
 */

#ifndef EXTENDEDKALMAN_H
#define	EXTENDEDKALMAN_H

#include <iostream>

//Get rid of Linux dependencies for Eigen library
//This Linux dependencies are for debug usage only.  -- By Tai 1st/Dec/2014
//More information about the flags can be found in http://eigen.tuxfamily.org/dox/TopicPreprocessorDirectives.html
#ifndef NDEBUG
	#define NDEBUG
#endif

#include <src/ExternalLibrary/Eigen/Eigen>
//#include "struct_euler.h"
#include "Quaternion.h"
#include <math.h>
using Eigen::Matrix;

#define pi 3.14159265358979


//debug usage only
//#define DEBUG_EXTENDEDKALMAN
#ifdef DEBUG_EXTENDEDKALMAN
	#include <stdbool.h>
	#include <stdint.h>
	#include <stdio.h>
	#include <iostream>
#endif

class ExtendedKalmanClass
{
public:
    ExtendedKalmanClass();
    virtual ~ExtendedKalmanClass();
    
    void predict(float gyro_p, float gyro_q, float gyro_r, float dt, QuaternionClass *quaternion);
    void update(float acc_x, float acc_y, float acc_z, float dt, QuaternionClass *quaternion);
private:
    Matrix<float,7,7> Q;
    Matrix<float, 7, 1> x;
    Matrix<float, 7, 7> F;
    Matrix<float, 7, 7> P;
    Matrix<float, 3, 1> z;
    Matrix<float, 3, 1> h;
    Matrix<float, 3, 1> y;
    Matrix<float, 3, 7> H;
    Matrix<float, 3, 3> S;
    Matrix<float, 3, 3> R;
    Matrix<float, 7, 3> K;
    Matrix<float, 7, 7> I;
};

#endif	/* EXTENDEDKALMAN_H */

